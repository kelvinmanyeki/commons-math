# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file for details.
# Licensed under the Apache License, Version 2.0.

name: Java CI with SonarCloud and Docker

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - '**/workflows/*.yml'
      - '!**/workflows/maven.yml'
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**/workflows/*.yml'
      - '!**/workflows/maven.yml'

permissions:
  contents: read
  security-events: write

jobs:
  build-and-scan:
    name: Build, Test & SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.9.6

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}

      - name: Install Randoop JAR
        run: |
          mkdir -p libs
          if ! wget -q https://github.com/randoop/randoop/releases/download/v4.3.3/randoop-4.3.3.jar -O libs/randoop-4.3.3.jar; then
              echo "❌ Failed to download Randoop JAR"
              exit 1
          fi
          mvn install:install-file \
            -Dfile=libs/randoop-4.3.3.jar \
            -DgroupId=org.randoop \
            -DartifactId=randoop \
            -Dversion=4.3.3 \
            -Dpackaging=jar \
            -DgeneratePom=true

      - name: Build with Maven
        run: |
          mvn -V --no-transfer-progress clean install -DskipTests
          mvn -V --no-transfer-progress verify

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=kelvinmanyeki_commons-math
            -Dsonar.organization=kevosd
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.java.binaries=**/target/classes
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.exclusions=**/docs/**,**/examples/**,**/dist-archive/**
            -Dsonar.coverage.jacoco.xmlReportPaths=**/target/site/jacoco/jacoco.xml

  dockerize:
    name: Dockerize Application
    runs-on: ubuntu-latest
    needs: build-and-scan

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        run: |
          # Verify and prepare Randoop dependency
          mkdir -p libs
          if ! wget -q https://github.com/randoop/randoop/releases/download/v4.3.3/randoop-4.3.3.jar -O libs/randoop-4.3.3.jar; then
              echo " Failed to download Randoop JAR for Docker build"
              exit 1
          fi
          [ -s libs/randoop-4.3.3.jar ] || (echo " Randoop JAR is empty"; exit 1)
          
          docker build --no-cache -t manyeki/predictive-maintenance:latest .

      - name: Push Docker image
        run: docker push manyeki/predictive-maintenance:latest
